++++++++++++++++++++++++++++
MAPLE FILES FROM THE WEBSITE
++++++++++++++++++++++++++++

https://www.math.ucdavis.edu/~latte/software/packages/m-knapsack.mpl was a newer version of  knapsackwithdualdec.14.04.2012.mpl (= code/maple/m-knapsack.mpl). 
Now code/maple/m-knapsack.mpl has been updated to be identical to the code at the website.



+++++++++++++++++
LINKS FROM PAPERS
+++++++++++++++++

PAPER: How to integrate a polynomial over a simplex,
 Maple programs accompanying the manuscript
 -- lists URL http://www.math.ucdavis.edu/~mkoeppe/art/pisa-integration-experiments/

    done: Add README to that directory that points to current state of the art 
          (C++ implementations in LattE). 

    MAYBE: If we expose the cleaned up Maple integration code in Latte code/maple again,
           also point to that.

PAPER: Software for Exact Integration of Polynomials over Polyhedra (published in CGTA)
 -- documents the input format (as in LattE manual).
 -- only refers to LattE integrale by general latte URL
 -- http://www.math.ucdavis.edu/~latte/theory/SoftwareExactIntegrationPolynomialsPolyhedraOnlineSupplement.pdf
    is a PDF of figures and tables (no links).

PAPER: Computation of the Highest Coefficients of Weighted Ehrhart Quasi-polynomials of Rational Polyhedra
 -- lists LattE macchiato, version 1.2-mk-0.9.3, available from URL http://www.math.ucdavis.edu/~mkoeppe/latte/
 -- lists Maple programs accompanying the manuscript:
    http://www.math.ucdavis.edu/~latte/topweightedehrhart-maple/
 -- this is a directory with a tar file: release-2010-11-05.tar, which contains "TopEhrhart_lib.mpl" etc.
    (slightly revised versions of these files (just some tests changed) are in SVN in code/latte/top-ehrhart.)

    done: Add README to that directory that points to LattE (to an svn working copy of subdirectory code/maple/)
         (Brandon)

PAPER: Intermediate Sums on Polyhedra: Computation and Real Ehrhart Theory
 -- mentions "our Maple program" but does not offer a link

PAPER: Intermediate Sums on Polyhedra II: Bidegree and Poisson Formula
 -- mentions "Maple implementation of such algorithms, which work with
    a symbolic vertex s; the resulting formulas are naturally valid for
    any real vector" but does not offer a link  

PAPER: Three Ehrhart Quasi-polynomials (to be finished)

    TODO: Refer to files.

++++++++++++++++
CORE MAPLE FILES
++++++++++++++++

code/maple/m-knapsack.mpl: top knapsack Maple code

 --- was the same as $PISA_PAPERS/knapsack/moreKnapsacks/knapsackwithdualdec.14.04.2012.mpl
 
 done: Now replaced by the better version from https://www.math.ucdavis.edu/~latte/software/packages/m-knapsack.mpl 

code/latte/top-ehrhart/TopEhrhart_lib.mpl: the SL method for finding top Ehrhart coefficients

 --- This is a cleaned up version of an earlier version of Conebyconeapproximations_08_11_2010.mpl

 TODO:  Take some of the documentation from TopEhrhart_lib.mpl and add it to 
 	code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl.   Then DELETE.

code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl: Top (real) weighted Ehrhart coefficients of a simple polytope

 done:  After above, move to code/maple.  (Update Makefiles.)


code/latte/integration/integrationTestsLib.mpl: for integrating polynomials over a simplex

 TODO:  Find out what its relation to http://www.math.ucdavis.edu/~mkoeppe/art/pisa-integration-experiments/ is. 

 TODO:  Move to code/maple

++++++++++++++++++++++
NEW FILES FROM DROPBOX
++++++++++++++++++++++

 DONE:  Add to tree

 DONE:  compare the versions, clean up


++++++++++++++++++++++++++
MAPLE FILES IN PISA-PAPERS
++++++++++++++++++++++++++
 
bedutra@logic:~/pisa-papers$ find  . -name "*.mpl"
These folders have many one experiment based files
./integration-programs/velleda-experiments-2008-05-18/* 
./integration-programs/michele-2008-10-06/*
./integration-programs/integration-experiments-float/*

./knapsack/moreKnapsacks/knapsackLib2.mpl used for testing the top knapsack vs the SL maple codes
./knapsack/moreKnapsacks/knapsackwithdualdec.14.04.2012.mpl: top knapsack maple code


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
MAPLE FILES THAT APPEAR in THE LATTE SVN SOURCE TREE (not all are distributed)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

bedutra@logic:~/latte/code/latte$ find  . -name "*.mpl"
./burstmapletest.mpl
./integration/multiplicity.mpl
./integration/integrationTestsLib.mpl
./integration/multiplyTest.mpl
./integration/compareTimes.mpl
./integration/decomposeTest.mpl
./integration/createLinear.mpl
./integration/benchmark.mpl
./valuation/test/integrateHyperrectangle.mpl
./valuation/test/valuationTestsLib.mpl
./nonlinearOptimization/testBox.mpl
./nonlinearOptimization/spoly.mpl
./nonlinearOptimization/weightedCountingBox.mpl
./top-ehrhart/testingTopEhrhart_lib.mpl
./top-ehrhart/Conebyconeapproximations_08_11_2010_examples.mpl
./top-ehrhart/TopEhrhart_lib.mpl
./top-ehrhart/Conebyconeapproximations_08_11_2010.mpl
./top-ehrhart/testingTopEhrhart.mpl

++++++++++++++++++++++++++
HOW THE ABOVE LIST IS USED
++++++++++++++++++++++++++

Top (real) weighted Ehrhart coefficients of a simple polytope
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1) top-ehrhart/Conebyconeapproximations_08_11_2010.mpl

This is the only one used inside of Latte.
The others in this list are for testing or for generating tables used in papers.



Testing integrating polynomials or powers of linear forms over a simplex
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1) TESTS += integration/testIntegration.sh
2) |-- integration/decomposeTest.mpl
3) |   |-- integration/integrationTestsLib.mpl
4) |   |   |-- check_PROGRAMS += integrate_test
5) |   |   |-- integration/createLinear.mpl

(2) sets the degree/dimension to test
(3) compares the maple integration algorithm (which is in (3)) with the c++ one (which is in (4))
(5) contains the functions to generate random integrands

Testing multiplying two polynomials
+++++++++++++++++++++++++++++++++++
1) TESTS +=  integration/testMultiply.sh
2) |-- integration/multiplyTest.mpl
3) |   |-- check_PROGRAMS += multiply_test

(2) multiplies two maple-style polynomials and compares it with the burst trie code in (3)

Making a table of times for integrating over a simplex
++++++++++++++++++++++++++++++++++++++++++++++++++++++
1) integration/benchmark.sh 5 integration/table5.txt
2) |-- integration/benchmark.mpl
3) |   |-- integration/createLinear.mpl
4) |   |-- check_PROGRAMS += integrate_test

(2) has the job of drawing the average time tables for integrating over a simplex. A small modification is needed.
(4) for running the integration over a simplex code.


Making a table of times for integrating a special power of linear form
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1) integration/multiplicity.mpl
2) |-- integration/benchmark.mpl
3) |   |-- integration/createLinear.mpl
4) |   |-- check_PROGRAMS += integrate_test

(1) does not seem to be complete. This table never made it into the paper.

Compare times of old array-based and new burst trie structures
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1) integration/compareTimes.mpl
2) |-- check_PROGRAMS += compare

Testing the burst trie code
+++++++++++++++++++++++++++
burstmapletest.mpl

not used.


Testing integrating polynomials, powers of linear forms, and 
products of powers of linear forms over a box domain.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1) valuation/test/integrateHyperrectangleTest.sh
2) |-- valuation/test/integrateHyperrectangle.mpl 
3) |   |-- valuation/test/valuationTestsLib.mpl
4) |   |   |-- check_PROGRAMS += test-hyperrectangle-integration
5) |   |   |-- integration/integrationTestsLib.mpl
6) |   |   |   |--integration/createLinear.mpl



(1) is a dummy script to call (2).
(2) changes the degree/dimension of the integrand
(3) does the integration on the maple side 
(4) takes the answer from (3) and does the integration on the c++ side
(5,6) are used because the functions to get the random integrand live there

 

Average time to find top 3 Ehrhart coefficients of a simplex using SL code
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1) top-ehrhart/testingTopEhrhart.mpl
2) |-- top-ehrhart/testingTopEhrhart_lib.mpl
3) |   |-- top-ehrhart/TopEhrhart_lib.mpl

(1,2) are main testing drivers
(3) is the SL method for finding top Ehrhart coefficients






